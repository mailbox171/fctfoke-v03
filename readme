
VARIABLE SCOPES
Variables are defined (variables.tf) and assigned (terraform.tfvars) in component root directory.
In addition, the following scopes can be used (values will override the root directory).

# GLOBAL                              -var-file=./../g.tfvars
# COMPONENT-ENVIRONMENT-REGION        -var-file=./$TFENV/$TFREGION/cer.tfvars
# COMPONENT-ENVIRONMENT               -var-file=./$TFENV/ce.tfvars
# ENVIRONMENT                         -var-file=./../vars/envs/$TFENV/e.tfvars
# REGION                              -var-file=./../vars/regions/$TFREGION/r.tfvars


SETUP STEPS

export TFENV=dev
export TFREGION=eu-frankfurt-1

vi ~/.bashrc
######Add these lines
alias tinit="terraform init -var-file=./../g.tfvars -var-file=./$TFENV/$TFREGION/cer.tfvars -var-file=./$TFENV/ce.tfvars -var-file=./../vars/envs/$TFENV/e.tfvars -var-file=./../vars/regions/$TFREGION/r.tfvars"
alias tplan="terraform plan -var-file=./../g.tfvars -var-file=./$TFENV/$TFREGION/cer.tfvars -var-file=./$TFENV/ce.tfvars -var-file=./../vars/envs/$TFENV/e.tfvars -var-file=./../vars/regions/$TFREGION/r.tfvars"
alias tapply="terraform apply  -var-file=./../g.tfvars -var-file=./$TFENV/$TFREGION/cer.tfvars -var-file=./$TFENV/ce.tfvars -var-file=./../vars/envs/$TFENV/e.tfvars -var-file=./../vars/regions/$TFREGION/r.tfvars"
 
source ~/.bashrc





git clone https://github.com/mailbox171/fctfoke-v01.git

cd 100-fr

edit sec.auto.tfvars
(set variables values)

export TFENV=dev
export TFREGION=eu-frankfurt-1

source  ~/.bashrc   # ALWAYS!





tinit
tplan
tapply

Apply complete! Resources: 31 added, 0 changed, 0 destroyed.
Outputs:
(..)
ssh_to_operator = "ssh -i ~/keys/ssh-key-2021-07-01.key -J opc@xxx.yyy.227.241 opc@zzz.www.0.6"




SSH TO OPERATOR
ssh_to_operator = "ssh -o StrictHostKeyChecking=no  -i ~/keys/ssh-key-2021-07-01.key -J opc@130.61.227.241 opc@10.0.0.6"
(..)
Are you sure you want to continue connecting (yes/no)? yes


TEST KUBECTL CONNECTION
[opc@dev-operator ~]$ kubectl get nodes

NAME           STATUS   ROLES   AGE     VERSION
10.0.114.244   Ready    node    6m47s   v1.19.7


CREATE MYSQL DB
sudo yum install mysql-shell
#mysqlsh Username@IPAddressOfMySQLDBSystemEndpoint
mysqlsh adminUser@10.0.3.8
BEstrO0ng_#11
 
\sql CREATE DATABASE polls;
Query OK, 1 row affected (0.0038 sec)

\quit



CLONE REPO ON OPERATOR
git clone https://github.com/mailbox171/fctfoke-v01.git/



GO TO K8S WORDPRESS MANIFEST FOLDER 
cd fctfoke-v01/100-fr/k8s/wp/

APPLY MANIFEST .yaml FILES
[opc@dev-operator wp]$ kubectl apply -f svc-mysql.yaml 
service/external-mysql-service created
endpoints/external-mysql-service created

[opc@dev-operator wp]$ kubectl apply -f wp.yaml 
service/wordpress created
persistentvolumeclaim/wp-pv-claim created
deployment.apps/wordpress created




CHECK SERVICES, WAIT FOR EXTERNAL ADDRESS (may be 'pending' for a while)
[opc@dev-operator wp]$ kubectl get svc
NAME                     TYPE           CLUSTER-IP      EXTERNAL-IP      PORT(S)        AGE
external-mysql-service   ClusterIP      10.96.104.164   <none>           3306/TCP       81s
kubernetes               ClusterIP      10.96.0.1       <none>           443/TCP        29m
wordpress                LoadBalancer   10.96.192.55    129.159.243.47   80:30952/TCP   40s




GO TO ADDRESS, IN ANY INTERNET BROWSER
http://129.159.243.47

WordPress website should be reached








